@model ExpenseTracker2.Models.Expense

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link href="~/Content/jquery.datetimepicker.css" rel="stylesheet" />
@section Scripts{
    <script src="~/Scripts/jquery.datetimepicker.js"></script>
    <script type="text/javascript">
        $(function () {
            $('.dt1').datetimepicker({
                
                showOn:"both",
                buttonText:"select"
            });
        });
    </script>
}

<h2>Create</h2>

@using (Html.BeginForm())
{
    @Html.HiddenFor(model => model.exId)
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Expense</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                @Html.TextAreaFor(m => m.Description, new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control dt1" } })
                @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-10">
                @Html.LabelFor(model => model.catId, htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.DropDownList("catId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.catId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Amount, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Amount, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Amount, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                @if (Model.exId == 0)
                {



                    <input type="submit" value="Create" class="btn btn-primary" name="btn" />

                }
                else
                {
                    <input type="submit" value="Update" class="btn btn-info" name="btn" />

                }
            </div>

        </div>
    </div>
}




<div>
    @Html.ActionLink("Back to List", "Index")
</div>
